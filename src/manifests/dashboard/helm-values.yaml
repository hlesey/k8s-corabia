auth:
  image:
    repository: ghcr.io/hlesey/kubernetesui/dashboard-auth
    tag: 1.1.3

# API deployment configuration
api:
  image:
    repository: ghcr.io/hlesey/kubernetesui/dashboard-api
    tag: 1.7.0

# WEB UI deployment configuration
web:
  image:
    repository: ghcr.io/hlesey/kubernetesui/dashboard-web
    tag: 1.4.0

### Metrics Scraper
### Container to scrape, store, and retrieve a window of time from the Metrics Server.
### refs: https://github.com/kubernetes/dashboard/tree/master/modules/metrics-scraper
metricsScraper:
  image:
    repository: ghcr.io/hlesey/kubernetesui/dashboard-metrics-scraper
    tag: 1.1.1


## Optional Metrics Server sub-chart configuration
## Enable this if you don't already have metrics-server enabled on your cluster and
## want to use it with dashboard metrics-scraper
## refs:
##  - https://github.com/kubernetes-sigs/metrics-server
##  - https://github.com/kubernetes-sigs/metrics-server/tree/master/charts/metrics-server
metrics-server:
  nameOverride: metrics-server
  fullnameOverride: metrics-server
  enabled: true
  args:
  - --kubelet-preferred-address-types=InternalIP
  - --kubelet-insecure-tls

## Optional Nginx Ingress sub-chart configuration
## Enable this if you don't already have nginx-ingress enabled on your cluster.
nginx:
  enabled: true
  namespaceOverride: ingress-nginx
  nameOverride: ingress-nginx
  fullnameOverride: ingress-nginx
  controller:
    electionID: ingress-controller-leader
    ingressClassResource:
      name: nginx
      default: false
      controllerValue: k8s.io/ingress-nginx
    service:
      type: ClusterIP
    watchIngressWithoutClass: true

## Optional Cert Manager sub-chart configuration
## Enable this if you don't already have cert-manager enabled on your cluster.
cert-manager:
  enabled: true
  installCRDs: true
  namespace: cert-manager
  nameOverride: cert-manager
  fullnameOverride: cert-manager

app:
  ingress:
    enabled: true
    hosts:
    # Keep 'localhost' host only if you want to access Dashboard using 'kubectl port-forward ...' on:
    # https://localhost:8443
    #- localhost
    - clusterx.qedzone.ro
    ingressClassName: nginx
    # Use only if your ingress controllers support default ingress classes.
    # If set to true ingressClassName will be ignored and not added to the Ingress resources.
    # It should fall back to using IngressClass marked as the default.
    useDefaultIngressClass: false
    # This will append our Ingress with annotations required by our default configuration.
    #    nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
    #    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    #    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    useDefaultAnnotations: true
    pathType: ImplementationSpecific
    # If path is not the default (/), rewrite-target annotation will be added to the Ingress.
    # It allows serving Kubernetes Dashboard on a sub-path. Make sure that the configured path
    # does not conflict with gateway route configuration.
    path: /
    issuer:
      name: selfsigned
      # Scope determines what kind of issuer annotation will be used on ingress resource
      # - default - adds 'cert-manager.io/issuer'
      # - cluster - adds 'cert-manager.io/cluster-issuer'
      # - disabled - disables cert-manager annotations
      scope: default
    tls:
      enabled: true
      # If provided it will override autogenerated secret name
      # secretName: "kubernetes-dashboard-certs"
    labels: { }
    annotations: { }
