---
# Source: cilium/templates/cilium-agent/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-relay/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-relay"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-ca-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: cilium-ca
  namespace: kube-system
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1wNWZyd0pqamMzeWZOTmRaNE92b2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd05qRTFORFUwTkZvWERUSTJNVEl3TlRFMQpORFUwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyNzZLY1hSQmJtNzN5ak5QZzcrd0NiMlNydGFzN00rQ1FXN01XeWY5OXo4Z044eWcKcVZzR21QUGQydk9NWlFKeXB1UERQRFVEcDNvb1oxSU5qYnA2K0FjSHUzQ0Nxb2xYaWZKYzJlNXFUSlg3dC92VApZQmI0RkhWK0lWVTNUVCt4S1lJVmoxczcyd2xjSXNjQmdWQ3o0ak5YWE1CR0d2RDZDWnFiV2phOGlsK3JJMm5UClBDanlvNCtITVpwWWxCd1NSaWd0UW5vTVlDcDR3Z3FOMkI5emxTdlpmOTNScVgwS3ZBQzBmMk84RkxsZElZTkIKTzJmaWxVQW81Z2NLa2tON3NtS3ozLzVDTkdPQmc3MkF4QVBBeE82Qkd6NjBCSWYzOEhIa25QZ1FtdkZKUVlNOApxYnpPQXd3QS84dlp1cHUvRC9YS2wvV085aW9xRzlRZVpXaEJod0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTlKQkpMNXB1OFdpcm95ejVrMGFueHNNZ29oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWZwTzdjSGYwdHJkVU1YWDNYV2ZEdXkwUndldm5iOWlQamlnVkRJZ2g4TklPYk43WFZSV1hWCnlrOVdkZGxsZEpHdjhWV1FERjJxUW50Um9kOUdCZEh4UEZ3SzRlditCeFpOWldXWHhyMFpQMTNzUnNFbFRGdXgKUG43a1hqOUFuaUhrMEJUay9USTJGOG84Wmo2b21lZmxuT3dhaEFCZHRwMHNhN3B1NktvMWxBUkJhenV1R3NLcwp3UFk3M0l2MUJxZkxzU0lRSy9nTVVTbC9WUFdVOHQzUVZoVnpvUi9yOXhySkZaNVFDNE9HTXNrKzJLZlFkWW55ClBnaGs2bk4yaTg4R2QyMFZxQjl5ZlMxS3YreTVKQUdhN0o0RUM2MVVSZCtPUlRNRFFlUk11Z3ZtZnhaS056K1UKcnlOVEs4YXllSUdtTU0yVG51VXhOK25OK3NyUFRpRjEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcjc2S2NYUkJibTczeWpOUGc3K3dDYjJTcnRhczdNK0NRVzdNV3lmOTl6OGdOOHlnCnFWc0dtUFBkMnZPTVpRSnlwdVBEUERVRHAzb29aMUlOamJwNitBY0h1M0NDcW9sWGlmSmMyZTVxVEpYN3QvdlQKWUJiNEZIVitJVlUzVFQreEtZSVZqMXM3MndsY0lzY0JnVkN6NGpOWFhNQkdHdkQ2Q1pxYldqYThpbCtySTJuVApQQ2p5bzQrSE1acFlsQndTUmlndFFub01ZQ3A0d2dxTjJCOXpsU3ZaZjkzUnFYMEt2QUMwZjJPOEZMbGRJWU5CCk8yZmlsVUFvNWdjS2trTjdzbUt6My81Q05HT0JnNzJBeEFQQXhPNkJHejYwQklmMzhISGtuUGdRbXZGSlFZTTgKcWJ6T0F3d0EvOHZadXB1L0QvWEtsL1dPOWlvcUc5UWVaV2hCaHdJREFRQUJBb0lCQUdZTnhzVTFWbDJ6c003SgpWdzVSdlA4YkI5ZmhyODlnZk9wVVZmVkZWdlJCd3dyRUdEUGdPUWVPN2JFY3B0VnRRM2pvWUZKUkVzc3BZOWNECnpmMFVZaDR2cnV6STNBZjk4MGlXNWhaam5YVFZ6N082VjdlLy90V2FtT0R3WkVuR2g3RnI2ZXN5ZHFLdVg4T08KUHJDQ1ZjTXdQellNTFdtdHIvVHR3L0x5UURBMWdZYkJLOGtla1cwbSswVE0wcjBlV2k3YlMycDk3OCtKSmlmQQo0U2NFbUpKQldiWmVRamRqUWpGbDZHRUt6VnFPRitIYjl2Ny9XRmxNRVR4Rzg3Z2dwQVBxTTBsZGc4LzJ4VTczCmFoQU1kU2pNNjYzd1g2VnovV1MxSzF4L0IydG1UQUpzcXQ4TU1taUJzT1JpK203dXZqd2ROV0dwMXBhRVN1eTYKaHRyOHZia0NnWUVBMGRadWlUMGhtcS9jSWNxcnJwcy9rWTUrK3FXQjRuZDE1cExrWFVEWThmVU1hRlo0dWlzcApvenN2cHM5U2dmWHE2VEtUY1Q2UWdIU3J3Mm9EVFg3bUNIZnVEWUs3WlFoQXRGazhldUlORS9KbnR1a0VXei8xCjhpQk0vbC94SThmbXNBQ0VVeEpZeVgycEh1d1JTbjkxMmpJMXliRlNGUm16SHdZZVNiQ3ppZDBDZ1lFQTFtZ04KVlZKMVRWYktNTE1PN2JYOWRqeFpnUWo2ZlRkMlltQzM1OFNPREZHVE4yVHRSVnZjaUM4ZW1kakJsaHMwWXhwMApBZThkMFJuVWR4Uk0zekYxUm5wdXJvOTIycFJTbTB1d1had2ZlTEEwd3JYVWFZOGFGZlBjQWdCL1FySDVmeG9tCm80QWl4MDlCWTArWFN0YzhBUE9NWmphaHNzNjNZYmZ2c252Q2pMTUNnWUVBa0ZncmJXaUo1emkxK3VESnZMQzYKeDh2MytUOUUyNTVGa2pqVnNuaGJSQVhIWlRhbWtab0RhRy9jVmFra0hwWWw1QWlRZUVRTGJ2SFMvZmU5RWVBTApLU1FtczFDTXkvRWpZV3hKT0Zhcm5GOFJqVGM1Y2ZQTG9hVXFrWWs1L2QwVENWc3hxMXRoakNsTzN5Q1F2R2gxCmo0VWVqd0hWYndKZ3Z5U2NUU0NxUUZrQ2dZQkRGRnJYanV6VVBZc1VvWERTUGxZR1grdEF5NlpTOXI4N0dEZHgKYzdWZGRVZ3gxSW5IWVc0bHpWZ3RtZnMzRTF2WWhiWTF4TEgzY2JWZmJDS0EwZUIzSkdic2hrWVJMTWFMZjZxMgpIdHBaMEFjeHcrR3BCUFNNV2JkRGlSUkhzWmIxaFNFQmxsMUxMaWl2QVgrOEVvcmJZVmRUdzFQanRYajZRYW5rCmxZUFFzUUtCZ0NrTHBHb3ZxTjVYd2tXbE0wZkNNWUpiUlZxRVFzVVN3Y0s5ODNMcnMwMGk0UE8wOWRUQ29Vb1oKTkZ0a1luN2VUc3Q1a2o3NnlqS3p1RDAzZnRIMVM3Q0VOODdJUmJ4UVFqNnpqNVNEcWh1a1lMZmY2WUh3Q1htSwptUnF4Vms3VFNteFJqenI3TjJia05RcUdlT3dpb2EzRHU4MjhRUlo4NmlRMERZaXg2Q09TCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: cilium/templates/hubble/tls-helm/relay-client-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1wNWZyd0pqamMzeWZOTmRaNE92b2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd05qRTFORFUwTkZvWERUSTJNVEl3TlRFMQpORFUwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyNzZLY1hSQmJtNzN5ak5QZzcrd0NiMlNydGFzN00rQ1FXN01XeWY5OXo4Z044eWcKcVZzR21QUGQydk9NWlFKeXB1UERQRFVEcDNvb1oxSU5qYnA2K0FjSHUzQ0Nxb2xYaWZKYzJlNXFUSlg3dC92VApZQmI0RkhWK0lWVTNUVCt4S1lJVmoxczcyd2xjSXNjQmdWQ3o0ak5YWE1CR0d2RDZDWnFiV2phOGlsK3JJMm5UClBDanlvNCtITVpwWWxCd1NSaWd0UW5vTVlDcDR3Z3FOMkI5emxTdlpmOTNScVgwS3ZBQzBmMk84RkxsZElZTkIKTzJmaWxVQW81Z2NLa2tON3NtS3ozLzVDTkdPQmc3MkF4QVBBeE82Qkd6NjBCSWYzOEhIa25QZ1FtdkZKUVlNOApxYnpPQXd3QS84dlp1cHUvRC9YS2wvV085aW9xRzlRZVpXaEJod0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTlKQkpMNXB1OFdpcm95ejVrMGFueHNNZ29oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWZwTzdjSGYwdHJkVU1YWDNYV2ZEdXkwUndldm5iOWlQamlnVkRJZ2g4TklPYk43WFZSV1hWCnlrOVdkZGxsZEpHdjhWV1FERjJxUW50Um9kOUdCZEh4UEZ3SzRlditCeFpOWldXWHhyMFpQMTNzUnNFbFRGdXgKUG43a1hqOUFuaUhrMEJUay9USTJGOG84Wmo2b21lZmxuT3dhaEFCZHRwMHNhN3B1NktvMWxBUkJhenV1R3NLcwp3UFk3M0l2MUJxZkxzU0lRSy9nTVVTbC9WUFdVOHQzUVZoVnpvUi9yOXhySkZaNVFDNE9HTXNrKzJLZlFkWW55ClBnaGs2bk4yaTg4R2QyMFZxQjl5ZlMxS3YreTVKQUdhN0o0RUM2MVVSZCtPUlRNRFFlUk11Z3ZtZnhaS056K1UKcnlOVEs4YXllSUdtTU0yVG51VXhOK25OK3NyUFRpRjEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRG1ZaytKeWpMcFJmSGc0OUczNlJJakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpBMk1UVTBOVFExV2hjTk1qWXhNakExTVRVMApOVFExV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDU2lVR2tqQThtMGZDMldTR1k2Qjd6QmZOSjVkU3kKSHE0ZEd1VG0zUjMrWXo3ZGFLQVhHYzNWSGtpcXRBbkRudEpEb2xSTmVnTWlYd3RZSklFK1dlalRvU0hNc3JJYQo3RStMa3JRNmk0MStDVXlBSUplQWpScnNZYWFLTDN4azRiWmVQN3RJcVl6OFlCd3dIaXBCd1BId1VBTkVRdjVlCjdtSHREWGdITHRFdkFsQ25aMC9KZzdoSUV5SmpoRTdqNlUzYUlmcUVabHdiTmpCNWxwajRNWnErbmg0Tk9meVUKOWQ5bHUyUDV2eVhTa2t2alo5eDJFQlI5WCtDdXUwRS9tQ3JkMUgzWkMvTWJVWnpBMDBhQktwbGMyTnlvT0g4cwoyOGxnbDBMaE5vNlFOV3A4d0NKa1dqV1RXTURBRTRCdnZNNGFLT3QxY1g2WHY0M20xSFNIcWRKN0FnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZNOUpCSkw1cHU4V2lyb3l6NWswYW54cwpNZ29oTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFJVGNmTzFxc0Eyc29pN2QwWnEzUjhDR1FWZjJlbjVHQTNsZmtSQUlvMXFKRmh1YjAKaGhLNEV3V2Q4NVJLWjB1TWpJeHl1WWlBa3FaWVpZalNMZmN0L1EramEzVVlwZExycFIrc0ZPbklZejhiU0I1UApERmZIYmhlTy93eDdtK1MvclFOOW5iNW9YZGJmQ1dBMVZPU3VkVC9VTmdxL1hwZmt3QjEwZjBhNmtCVUlsNjlyCmEwbjBjcmtNc0hTdlp0cjlpeVRrTkpxUDZuK3FaMUxJRExCN3pPZ3Jpb1R3WU1ZOVo2b3dHSnNCS3BmaVNBQjcKSmdGNWl6U1VOaGJ4Y2JHS3NjRkV6citDMjNaRnJtaDJ0VDJjRHhJNmN2OFJVYitUQmVFSEhjR0xPbEdkK1lhUQpHTUVFZlhWanpIbmh1cFhwWU5jOXY3dFNsWkF0TURsV1JOamwvdz09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBa29sQnBJd1BKdEh3dGxraG1PZ2U4d1h6U2VYVXNoNnVIUnJrNXQwZC9tTSszV2lnCkZ4bk4xUjVJcXJRSnc1N1NRNkpVVFhvRElsOExXQ1NCUGxubzA2RWh6TEt5R3V4UGk1SzBPb3VOZmdsTWdDQ1gKZ0kwYTdHR21paTk4Wk9HMlhqKzdTS21NL0dBY01CNHFRY0R4OEZBRFJFTCtYdTVoN1ExNEJ5N1JMd0pRcDJkUAp5WU80U0JNaVk0Uk80K2xOMmlINmhHWmNHell3ZVphWStER2F2cDRlRFRuOGxQWGZaYnRqK2I4bDBwSkw0MmZjCmRoQVVmVi9ncnJ0QlA1Z3EzZFI5MlF2ekcxR2N3Tk5HZ1NxWlhOamNxRGgvTE52SllKZEM0VGFPa0RWcWZNQWkKWkZvMWsxakF3Qk9BYjd6T0dpanJkWEYrbDcrTjV0UjBoNm5TZXdJREFRQUJBb0lCQUUyaEZ6eHowb2NQUzBWZQovTFNEcS9tMUdrajR6L0E0M3FhZW04dE9NdGlVZlRaUWVoY2kzVzljNXNSQU1yZ0dpSCs2SEkwYTZWUXBJOXBqCkpIRUNzcHlDeldRaStzWFdrT0Z4Szdla1BLWWJpUUtMd1pjaHFiUzJtc0swRzJOYVRBR3NJNngvM2lmSlJzV2IKQldubUxJWFI3WmtaSUtic0JNYlBqdG5IVEp4cEFWYkM0UFoySUVJYTBZb0xUcnJBalZVUXNoZ2xiTDE0cWlCZAo1dFdpTjBjU1I4Nzk2OFNDVE9KUzVzdlIyNnJnK2t0SXJTQWFoUEhuOVlPcVBSYXE0MlhsRlBqUkM4NHFwSXJSCldlenZxdnZHcVpsQzdaai9uem1JeGpYcHpIa0FaRyt2MldSQ3VhOWM2VmZwME9DQ1N2NTU5MlNzZTlnSVlMaXIKWnVQV2Jza0NnWUVBd3liNmt3aXMyZHdHd1FYTGpuNm8xZktLTGNpNFI2czJSYWFPOHFQQng0R2pzNW5rOURNcAprcXkxbUt4eDRaNVdvUHhKejl6WXd3TEwvWVVVZWt4THZScUMxQ2VGVEVFcHNjb3dkWWhyOVFqeFRRdXc5TGl4CkR3L3NFanFLUVlKWnVEM0lONFU4akd2ZVFPQ1MzTXFrVXRRYnAzQUpreUZJd1NuUzhYV0poaDhDZ1lFQXdEbS8Ka05IT0dMRnBBRlVCNGlpRHJWUVFhQm5acmhvSGZFWUJJVTBFeXRTTzQ2RzRncHZ1R3E2Q2R0R1I1eEJxVVg5VQpGRDhWMGZkTkJtc0lzdWNQQ1dISGJQN2xWSURuYXE3N05FTEk2ODkyOFdnU0V5eG9FdE5Fa3p5aWlTQ2NKZnJHCnZqMHhleWhqYi9va1I5QXBzOGtsTVpGa2R4VlBOTG5vZTNXb2tDVUNnWUVBckZlL0VKeW5zZHByS0luS283UGQKdk52dUJkTHVVM1N6Z0QxQW5xM1oweXY4K3Y2Y3dNQnlKWE5iQ0ZLNlc4cnVyRXRCa0UxMExIeEsxRUJ6dmpHawo3WUw5S1FraDRoN21DSG9MNDdBdnp2MHZ4Si9mamErUnhrQ0VkZkMyNm5XSWNIbzNXRGpWS1JtVjlPdWZKMWZhCldMK3pFR0tVUWhneDNVem5XcEEzZkhjQ2dZRUF0SVVHL0Erc0J0Q0ZGVVMvc2czdUt4WnBHZm84elIyd3JlcG8KSVVmZEdrWW5zbW9yaHF5OUhOMkpzOS8zcnhGaFp3dTJnQlVHZnRwSndaOCsyaFBYc1MzY1JPWFRwRm94K2FRKwpVTVB2UUZUakZLNXhXd1EyOEliclBZS1IrVWxnbXVJNVJtcmRUeFdNM0pvQy9GWG04K29RUGM2V2xLYTBiWVd4CmFGQUVidWtDZ1lBR09tWUJHbTdqTW1jR2hKQmhDOXBLMVEvTVZ3eEVqeDkrVk82QzRKMWEwY0Y5b0ZadU5FMUYKclBPamk0M2JtdUZjSnQ0ckVCdDRscmhpMy9ZY1JKYm45aTFoNWs5dGdBK0U4dHBKSjJvTkJZbDBQaVRRcnZ5awpNNDFIU1AxNCtyWnlxSUJuSFNMM0QyTElyeGNaRFRCY2xreFU0bWx1cFdmWnliV2lFeSs1NGc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/hubble/tls-helm/server-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
data:
  ca.crt:  LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQU1wNWZyd0pqamMzeWZOTmRaNE92b2d3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TVRJd05qRTFORFUwTkZvWERUSTJNVEl3TlRFMQpORFUwTkZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUFyNzZLY1hSQmJtNzN5ak5QZzcrd0NiMlNydGFzN00rQ1FXN01XeWY5OXo4Z044eWcKcVZzR21QUGQydk9NWlFKeXB1UERQRFVEcDNvb1oxSU5qYnA2K0FjSHUzQ0Nxb2xYaWZKYzJlNXFUSlg3dC92VApZQmI0RkhWK0lWVTNUVCt4S1lJVmoxczcyd2xjSXNjQmdWQ3o0ak5YWE1CR0d2RDZDWnFiV2phOGlsK3JJMm5UClBDanlvNCtITVpwWWxCd1NSaWd0UW5vTVlDcDR3Z3FOMkI5emxTdlpmOTNScVgwS3ZBQzBmMk84RkxsZElZTkIKTzJmaWxVQW81Z2NLa2tON3NtS3ozLzVDTkdPQmc3MkF4QVBBeE82Qkd6NjBCSWYzOEhIa25QZ1FtdkZKUVlNOApxYnpPQXd3QS84dlp1cHUvRC9YS2wvV085aW9xRzlRZVpXaEJod0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGTTlKQkpMNXB1OFdpcm95ejVrMGFueHNNZ29oTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQWZwTzdjSGYwdHJkVU1YWDNYV2ZEdXkwUndldm5iOWlQamlnVkRJZ2g4TklPYk43WFZSV1hWCnlrOVdkZGxsZEpHdjhWV1FERjJxUW50Um9kOUdCZEh4UEZ3SzRlditCeFpOWldXWHhyMFpQMTNzUnNFbFRGdXgKUG43a1hqOUFuaUhrMEJUay9USTJGOG84Wmo2b21lZmxuT3dhaEFCZHRwMHNhN3B1NktvMWxBUkJhenV1R3NLcwp3UFk3M0l2MUJxZkxzU0lRSy9nTVVTbC9WUFdVOHQzUVZoVnpvUi9yOXhySkZaNVFDNE9HTXNrKzJLZlFkWW55ClBnaGs2bk4yaTg4R2QyMFZxQjl5ZlMxS3YreTVKQUdhN0o0RUM2MVVSZCtPUlRNRFFlUk11Z3ZtZnhaS056K1UKcnlOVEs4YXllSUdtTU0yVG51VXhOK25OK3NyUFRpRjEKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURWakNDQWo2Z0F3SUJBZ0lRTFRjSHdrYTdsdVBBQVZoTGJPV1pHakFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak14TWpBMk1UVTBOVFEwV2hjTk1qWXhNakExTVRVMApOVFEwV2pBcU1TZ3dKZ1lEVlFRRERCOHFMbVJsWm1GMWJIUXVhSFZpWW14bExXZHljR011WTJsc2FYVnRMbWx2Ck1JSUJJakFOQmdrcWhraUc5dzBCQVFFRkFBT0NBUThBTUlJQkNnS0NBUUVBNng1cC9OVnNHNll5VFZZc0ZOT1QKNTJsVHVXdjhrNTc4ZG0rbHZZaUUvR2JvOThlM2JoY0pUdkpNZ25TV1FudXV6TnBmSjJqemlFRzJDVkhBbkZPOAowdWFBRk9yRDZ1NFVJZ3p2S2JDQWtGMjhQZWJoSnd0eXlQcENhVTUrNnZoWTVXay8yU0Q0dVFtZC9BMk5HNDFrCllpd2l2R1IwclZ5R0Z5ZFMveUJHaXdjWEZLeHphZzM0bGNJY3lkTCtYVlFiNHZQQU54RzVoUEs4MlZLdllRb28KWDJqVmd0K0RGT2hMV256S21SbzhXQzNLZE5YcmNpbWVLT3JjRGF0MXR3VFhqSXFFV2l1LzRYMS9XYzdMekZDaQp2YkFhRWg0S01aL2ZQNEdDd0pWd1BjN2Zwa0tiQzlRUzNqOVMvSWlFUHQ5dEwrTkhpdFlFdFVyb1V3UmljNHRHCm1RSURBUUFCbzRHTk1JR0tNQTRHQTFVZER3RUIvd1FFQXdJRm9EQWRCZ05WSFNVRUZqQVVCZ2dyQmdFRkJRY0QKQVFZSUt3WUJCUVVIQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JUUFNRU1MrYWJ2Rm9xNgpNcytaTkdwOGJESUtJVEFxQmdOVkhSRUVJekFoZ2g4cUxtUmxabUYxYkhRdWFIVmlZbXhsTFdkeWNHTXVZMmxzCmFYVnRMbWx2TUEwR0NTcUdTSWIzRFFFQkN3VUFBNElCQVFDbzZKQzZtTTNiSHRLeTkwbndhdXd3MXdsYU5BRkkKRWc0eHFtNXJIak94clplQVlIWG1OVUNjNXlZZDVYbGZmL2w0OWNwTUd1eUhxVk4rd3NOU3AvRXV3RTIxL1k1MgpOdlBkRU1pUFBWVm1URTltWXBneFl0RTZtSllyYXBTOTRyYU9LMER1ajg5eXV5cGlaYkxyeHA4RmhaVDRldUxpCnNzWDNXU2ZnMkVvZ1Y1UURSN2I0UkpIRDlOakI3VGZBSmdhcEVGY1h5YkVGZ2gyUlBmc0FhU04vcW9mT0xybHEKMXlPa095azFsVDJuV25lQWg5N0JTVjR5eXROajdMM2g4Mm5OckY5bjQ4NWNWTVQ1cHl2YmRiVHV5RTJjdHcxSApQcGUwdTJ0SGM4QnR1KzVRcXVVclBuRVlxWkltZEVwMUFPMW9NZVU2TGNGcllPT2IvY0xvRXpJaQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNng1cC9OVnNHNll5VFZZc0ZOT1Q1MmxUdVd2OGs1NzhkbStsdllpRS9HYm85OGUzCmJoY0pUdkpNZ25TV1FudXV6TnBmSjJqemlFRzJDVkhBbkZPODB1YUFGT3JENnU0VUlnenZLYkNBa0YyOFBlYmgKSnd0eXlQcENhVTUrNnZoWTVXay8yU0Q0dVFtZC9BMk5HNDFrWWl3aXZHUjByVnlHRnlkUy95Qkdpd2NYRkt4egphZzM0bGNJY3lkTCtYVlFiNHZQQU54RzVoUEs4MlZLdllRb29YMmpWZ3QrREZPaExXbnpLbVJvOFdDM0tkTlhyCmNpbWVLT3JjRGF0MXR3VFhqSXFFV2l1LzRYMS9XYzdMekZDaXZiQWFFaDRLTVovZlA0R0N3SlZ3UGM3ZnBrS2IKQzlRUzNqOVMvSWlFUHQ5dEwrTkhpdFlFdFVyb1V3UmljNHRHbVFJREFRQUJBb0lCQVFESVYwTVNpRHkxRnBsNApJbnd2UnRXWmNycy9uUTg4TGxXTENibGRWYzJUVUpFa1NNNDVCWElPRGhJNWV1UnFRLzkvV0hlS0dqaWhHdlRrCjNmOVVkVm5KRDFXRi9VRHhsdW9hMVpDWW9tZjZHNVVCM2hCdDk2aFlMajZXZ3FkTXlrN2ROQ0NPZ0RUUFhxMTYKajRWME83ZVVtMjBCd0V0WFNTYU01aG9uZ0RYNzBXMm52UGZoWThabDczQUNHZHZVMVh5NWZldDV0UWUzaG4vawpYWWxUODFqWUVONDYrSjAwbU9xajQraW50OXFZWkFUaEVkY2kwNVBjSFliMUpad3AxK0hPNFYrb3BXbWwvY1lPCkZFa0FnVkxic2dJcE5hYXNMck9YYnd5NTRDN1NnaHBIcUpMNXlwZmdGV1A0TVd5VmI1ZXBMaThuakxKaHhJeEcKa1dXUXp0VWRBb0dCQVBrYXRUeGpNWVJqSVpZUmN6cW43S3haYmxPRUxGRlpiK2lndVdCbFo1RVhGWG9GTHVEUAowZEpVcytnaDg0MEsxR1NuNHBnWnFPVUxSeGdWK0IwUStkZHlSV0c1SGJZRnYwc2hSRkl6UlhSV1MvV1laQlQ3CkJVd2kyVGxDK2RQU0ZxNjlYNG9jbXFVdXRUQ1F1Smt0ZGlWUVFvM0JMU2F2Y29Kc3B6eWJ0Z1ZmQW9HQkFQR2cKbU10VXk2WWVDUVFhTjQwdUZFWTI3cks4RFo1SHY4MTI2QXl1endONVovL0JjM0VyMTNKc0QrU0VMV1BnTjdPegpiQUtwOVNmM0VOZnlodUx4OHdSY3pRZDdIWEM2VC80NlZoNFhpblAzTmJrRHJXekxodXhCMnhwa1lGc2lBNGFJCkMzSTRiR3ZEQkZpNElsSmJhaHd0WG1oeUNudzZsQi9JWWxpRmVYOEhBb0dCQU5SU2cyKzVUSmQrdHozbUdjVkIKSkdXeXhHckRHZE1zM0VuMzFJbnBaT0V5UDhnRmF2T0xyMWdMZ2x5MXM1WGdTVENTT0gxVVFiVVlhN3lIM1RkSgpKT3NTSnprb1E3N0dIMHEyVERtVUlmc0xJeXR1ZkwrMVJjcWpXV3VKUHMvaEhoeEtwWWhlNFNFeU1wWDJoS0ZyCk1teVRnR2E2NVBVNFRlNEZGblorY2lNWkFvR0FVYjdmY29yeGl2WEdYeGp2aWxmNGkvaXhzTTVtWFJJeEZiWVEKczVuQWQ1QnZXdHQ3enVIaU5kZlJXS0pQS09jR2NVbFdWV0Jpakc3TnlBRkpHU1o1N1JQb1dZdVJYajNxS2p4YQpQandBbjFNWFhjeWNzNTMzdTU1Y0hnV3ZnNlZ5UStWcTJlMjA0SkJOdkNZdmxtVk85TkYwaXlscDJyV0d2Mm52CnU3c01hNmtDZ1lCdUhkMXRmUnY3ejRpZ1B4N0hwOC9wbGtLM3k4MHQ3Y0xQYVp0MHBndHV1MkRBNDBaODNTRUkKVjRxcmgrK0pZbFBuSy9Tc1Rxd3hhbW91YUNsZWpRLzhNTUx6bEtXUklmRUZ1QzdGVFB3YUtkbU1XN2o0TnBQZwpERGZtTjVPeXd0bmVkU2NNcHBGT0hrc1JkaStDbVRRNkVTTFpTTDNWcmlEOWh5SWNrdlAwUmc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
---
# Source: cilium/templates/cilium-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: cilium-config
  namespace: kube-system
data:

  # Identity allocation mode selects how identities are shared between cilium
  # nodes by setting how they are stored. The options are "crd" or "kvstore".
  # - "crd" stores identities in kubernetes as CRDs (custom resource definition).
  #   These can be queried with:
  #     kubectl get ciliumid
  # - "kvstore" stores identities in an etcd kvstore, that is
  #   configured below. Cilium versions before 1.6 supported only the kvstore
  #   backend. Upgrades from these older cilium versions should continue using
  #   the kvstore by commenting out the identity-allocation-mode below, or
  #   setting it to "kvstore".
  identity-allocation-mode: crd
  identity-heartbeat-timeout: "30m0s"
  identity-gc-interval: "15m0s"
  cilium-endpoint-gc-interval: "5m0s"
  nodes-gc-interval: "5m0s"
  skip-cnp-status-startup-clean: "false"

  # If you want to run cilium in debug mode change this value to true
  debug: "false"
  debug-verbose: ""
  # The agent can be put into the following three policy enforcement modes
  # default, always and never.
  # https://docs.cilium.io/en/latest/security/policy/intro/#policy-enforcement-modes
  enable-policy: "default"
  # Port to expose Envoy metrics (e.g. "9964"). Envoy metrics listener will be disabled if this
  # field is not set.
  proxy-prometheus-port: "9964"

  # Enable IPv4 addressing. If enabled, all endpoints are allocated an IPv4
  # address.
  enable-ipv4: "true"

  # Enable IPv6 addressing. If enabled, all endpoints are allocated an IPv6
  # address.
  enable-ipv6: "false"
  # Users who wish to specify their own custom CNI configuration file must set
  # custom-cni-conf to "true", otherwise Cilium may overwrite the configuration.
  custom-cni-conf: "false"
  enable-bpf-clock-probe: "false"
  # If you want cilium monitor to aggregate tracing for packets, set this level
  # to "low", "medium", or "maximum". The higher the level, the less packets
  # that will be seen in monitor output.
  monitor-aggregation: medium

  # The monitor aggregation interval governs the typical time between monitor
  # notification events for each allowed connection.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-interval: "5s"

  # The monitor aggregation flags determine which TCP flags which, upon the
  # first observation, cause monitor notifications to be generated.
  #
  # Only effective when monitor aggregation is set to "medium" or higher.
  monitor-aggregation-flags: all
  # Specifies the ratio (0.0-1.0] of total system memory to use for dynamic
  # sizing of the TCP CT, non-TCP CT, NAT and policy BPF maps.
  bpf-map-dynamic-size-ratio: "0.0025"
  # bpf-policy-map-max specifies the maximum number of entries in endpoint
  # policy map (per endpoint)
  bpf-policy-map-max: "16384"
  # bpf-lb-map-max specifies the maximum number of entries in bpf lb service,
  # backend and affinity maps.
  bpf-lb-map-max: "65536"
  bpf-lb-external-clusterip: "false"

  # Pre-allocation of map entries allows per-packet latency to be reduced, at
  # the expense of up-front memory allocation for the entries in the maps. The
  # default value below will minimize memory usage in the default installation;
  # users who are sensitive to latency may consider setting this to "true".
  #
  # This option was introduced in Cilium 1.4. Cilium 1.3 and earlier ignore
  # this option and behave as though it is set to "true".
  #
  # If this value is modified, then during the next Cilium startup the restore
  # of existing endpoints and tracking of ongoing connections may be disrupted.
  # As a result, reply packets may be dropped and the load-balancing decisions
  # for established connections may change.
  #
  # If this option is set to "false" during an upgrade from 1.3 or earlier to
  # 1.4 or later, then it may cause one-time disruptions during the upgrade.
  preallocate-bpf-maps: "false"

  # Regular expression matching compatible Istio sidecar istio-proxy
  # container image names
  sidecar-istio-proxy-image: "cilium/istio_proxy"

  # Name of the cluster. Only relevant when building a mesh of clusters.
  cluster-name: default
  # Unique ID of the cluster. Must be unique across all conneted clusters and
  # in the range of 1 and 255. Only relevant when building a mesh of clusters.
  cluster-id: "0"

  # Encapsulation mode for communication between nodes
  # Possible values:
  #   - disabled
  #   - vxlan (default)
  #   - geneve
  # Default case
  routing-mode: "tunnel"
  tunnel-protocol: "vxlan"


  # Enables L7 proxy for L7 policy enforcement and visibility
  enable-l7-proxy: "true"

  enable-ipv4-masquerade: "true"
  enable-ipv4-big-tcp: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"

  enable-xt-socket-fallback: "true"
  install-no-conntrack-iptables-rules: "false"

  auto-direct-node-routes: "false"
  enable-local-redirect-policy: "false"

  kube-proxy-replacement: "false"
  kube-proxy-replacement-healthz-bind-address: ""
  bpf-lb-sock: "false"
  enable-host-port: "false"
  enable-external-ips: "false"
  enable-node-port: "false"
  enable-health-check-nodeport: "true"
  node-port-bind-protection: "true"
  enable-auto-protect-node-port-range: "true"
  enable-svc-source-range-check: "true"
  enable-l2-neigh-discovery: "true"
  arping-refresh-period: "30s"
  enable-k8s-networkpolicy: "true"
  # Tell the agent to generate and write a CNI configuration file
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
  cni-exclusive: "true"
  cni-log-file: "/var/run/cilium/cilium-cni.log"
  enable-endpoint-health-checking: "true"
  enable-health-checking: "true"
  enable-well-known-identities: "false"
  enable-remote-node-identity: "true"
  synchronize-k8s-nodes: "true"
  operator-api-serve-addr: "127.0.0.1:9234"
  # Enable Hubble gRPC service.
  enable-hubble: "true"
  # UNIX domain socket for Hubble server to listen to.
  hubble-socket-path: "/var/run/cilium/hubble.sock"
  # An additional address for Hubble server to listen to (e.g. ":4244").
  hubble-listen-address: ":4244"
  hubble-disable-tls: "false"
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  ipam: "cluster-pool"
  ipam-cilium-node-update-rate: "15s"
  cluster-pool-ipv4-cidr: "10.244.0.0/16"
  cluster-pool-ipv4-mask-size: "24"
  disable-cnp-status-updates: "true"
  cnp-node-status-gc-interval: "0s"
  egress-gateway-reconciliation-trigger-interval: "1s"
  enable-vtep: "false"
  vtep-endpoint: ""
  vtep-cidr: ""
  vtep-mask: ""
  vtep-mac: ""
  enable-bgp-control-plane: "false"
  procfs: "/host/proc"
  bpf-root: "/sys/fs/bpf"
  cgroup-root: "/run/cilium/cgroupv2"
  enable-k8s-terminating-endpoint: "true"
  enable-sctp: "false"
  k8s-client-qps: "5"
  k8s-client-burst: "10"
  remove-cilium-node-taints: "true"
  set-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  unmanaged-pod-watcher-interval: "15"
  tofqdns-dns-reject-response-code: "refused"
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: "0s"
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: "100ms"
  agent-not-ready-taint-key: "node.cilium.io/agent-not-ready"

  mesh-auth-enabled: "true"
  mesh-auth-queue-size: "1024"
  mesh-auth-rotated-identities-queue-size: "1024"
  mesh-auth-gc-interval: "5m0s"

  proxy-connect-timeout: "2"
  proxy-max-requests-per-connection: "0"
  proxy-max-connection-duration-seconds: "0"

  external-envoy-proxy: "false"
---
# Source: cilium/templates/hubble-relay/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-relay-config
  namespace: kube-system
data:
  config.yaml: |
    cluster-name: default
    peer-service: "hubble-peer.kube-system.svc.cluster.local:443"
    listen-address: :4245
    gops: true
    gops-port: "9893"
    dial-timeout: 
    retry-timeout: 
    sort-buffer-len-max: 
    sort-buffer-drain-timeout: 
    tls-hubble-client-cert-file: /var/lib/hubble-relay/tls/client.crt
    tls-hubble-client-key-file: /var/lib/hubble-relay/tls/client.key
    tls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt
    disable-server-tls: true
---
# Source: cilium/templates/hubble-ui/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: hubble-ui-nginx
  namespace: kube-system
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name  localhost;\n    root /app;\n    index index.html;\n    client_max_body_size 1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n        if ($request_method = OPTIONS) {\n            return 204;\n        }\n        # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n            proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n            proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n            # double `/index.html` is required here \n            try_files $uri $uri/ /index.html /index.html;\n        }\n    }\n}"
---
# Source: cilium/templates/cilium-agent/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  # This is used when validating policies in preflight. This will need to stay
  # until we figure out how to avoid "get" inside the preflight, and then
  # should be removed ideally.
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  - ciliuml2announcementpolicies
  - ciliumpodippools
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  # To synchronize garbage collection of such resources
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  - ciliuml2announcementpolicies/status
  verbs:
  - patch
---
# Source: cilium/templates/cilium-operator/clusterrole.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  # to automatically delete [core|kube]dns pods so that are starting to being
  # managed by Cilium
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # To remove node taints
  - nodes
  # To set NetworkUnavailable false on startup
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform LB IP allocation for BGP
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  # to check apiserver connectivity
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  # to perform the translation of a CNP that contains `ToGroup` to its endpoints
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  # Create auto-generated CNPs and CCNPs from Policies that have 'toGroups'
  - create
  - update
  - deletecollection
  # To update the status of the CNPs and CCNPs
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  # Update the auto-generated CNPs and CCNPs status.
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  # To perform garbage collection of such resources
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  # To synchronize garbage collection of such resources
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
    # To perform CiliumNode garbage collector
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  - ciliuml2announcementpolicies.cilium.io
  - ciliumpodippools.cilium.io
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumpodippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
    - cilium.io
  resources:
    - ciliumpodippools
  verbs:
    - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
# For cilium-operator running in HA mode.
#
# Cilium operator running in HA mode requires the use of ResourceLock for Leader Election
# between multiple running instances.
# The preferred way of doing this is to use LeasesResourceLock as edits to Leases are less
# common and fewer objects in the cluster watch "all Leases".
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
# Source: cilium/templates/hubble-ui/clusterrole.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - "*"
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: "cilium"
  namespace: kube-system
---
# Source: cilium/templates/cilium-operator/clusterrolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: cilium-operator
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: "cilium-operator"
  namespace: kube-system
---
# Source: cilium/templates/hubble-ui/clusterrolebinding.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: hubble-ui
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: "hubble-ui"
  namespace: kube-system
---
# Source: cilium/templates/cilium-agent/role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
# Source: cilium/templates/cilium-agent/rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cilium-config-agent
  namespace: kube-system
  labels:
    app.kubernetes.io/part-of: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: "cilium"
    namespace: kube-system
---
# Source: cilium/templates/hubble-relay/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-relay
  ports:
  - protocol: TCP
    port: 80
    targetPort: 4245
---
# Source: cilium/templates/hubble-ui/service.yaml
kind: Service
apiVersion: v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  type: "ClusterIP"
  selector:
    k8s-app: hubble-ui
  ports:
    - name: http
      port: 80
      targetPort: 8081
---
# Source: cilium/templates/hubble/peer-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: hubble-peer
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: hubble-peer
spec:
  selector:
    k8s-app: cilium
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  internalTrafficPolicy: Local
---
# Source: cilium/templates/cilium-agent/daemonset.yaml
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cilium
  namespace: kube-system
  labels:
    k8s-app: cilium
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-agent
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
  template:
    metadata:
      annotations:
        # Set app AppArmor's profile to "unconfined". The value of this annotation
        # can be modified as long users know which profiles they have available
        # in AppArmor.
        container.apparmor.security.beta.kubernetes.io/cilium-agent: "unconfined"
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: "unconfined"
        container.apparmor.security.beta.kubernetes.io/mount-cgroup: "unconfined"
        container.apparmor.security.beta.kubernetes.io/apply-sysctl-overwrites: "unconfined"
      labels:
        k8s-app: cilium
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
    spec:
      containers:
      - name: cilium-agent
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-agent
        args:
        - --config-dir=/tmp/cilium/config-map
        startupProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          failureThreshold: 105
          periodSeconds: 2
          successThreshold: 1
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 10
          timeoutSeconds: 5
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9879
            scheme: HTTP
            httpHeaders:
            - name: "brief"
              value: "true"
          periodSeconds: 30
          successThreshold: 1
          failureThreshold: 3
          timeoutSeconds: 5
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        lifecycle:
          postStart:
            exec:
              command:
              - "bash"
              - "-c"
              - |
                    set -o errexit
                    set -o pipefail
                    set -o nounset
                    
                    # When running in AWS ENI mode, it's likely that 'aws-node' has
                    # had a chance to install SNAT iptables rules. These can result
                    # in dropped traffic, so we should attempt to remove them.
                    # We do it using a 'postStart' hook since this may need to run
                    # for nodes which might have already been init'ed but may still
                    # have dangling rules. This is safe because there are no
                    # dependencies on anything that is part of the startup script
                    # itself, and can be safely run multiple times per node (e.g. in
                    # case of a restart).
                    if [[ "$(iptables-save | grep -c 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN')" != "0" ]];
                    then
                        echo 'Deleting iptables rules created by the AWS CNI VPC plugin'
                        iptables-save | grep -v 'AWS-SNAT-CHAIN|AWS-CONNMARK-CHAIN' | iptables-restore
                    fi
                    echo 'Done!'
                    
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - CHOWN
              - KILL
              - NET_ADMIN
              - NET_RAW
              - IPC_LOCK
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
              - DAC_OVERRIDE
              - FOWNER
              - SETGID
              - SETUID
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        # Unprivileged containers need to mount /proc/sys/net from the host
        # to have write access
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        # Unprivileged containers need to mount /proc/sys/kernel from the host
        # to have write access
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Unprivileged containers can't set mount propagation to bidirectional
          # in this case we will mount the bpf fs from an init container that
          # is privileged and set the mount propagation from host to container
          # in Cilium.
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        - name: etc-cni-netd
          mountPath: /host/etc/cni/net.d
        - name: clustermesh-secrets
          mountPath: /var/lib/cilium/clustermesh
          readOnly: true
          # Needed to be able to load kernel modules
        - name: lib-modules
          mountPath: /lib/modules
          readOnly: true
        - name: xtables-lock
          mountPath: /run/xtables.lock
        - name: hubble-tls
          mountPath: /var/lib/cilium/tls/hubble
          readOnly: true
        - name: tmp
          mountPath: /tmp
      initContainers:
      - name: config
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      # Required to mount cgroup2 filesystem on the underlying Kubernetes node.
      # We use nsenter command with host's cgroup and mount namespaces enabled.
      - name: mount-cgroup
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: CGROUP_ROOT
          value: /run/cilium/cgroupv2
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh and mount that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-mount /hostbin/cilium-mount;
          nsenter --cgroup=/hostproc/1/ns/cgroup --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-mount" $CGROUP_ROOT;
          rm /hostbin/cilium-mount
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      - name: apply-sysctl-overwrites
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        env:
        - name: BIN_PATH
          value: /opt/cni/bin
        command:
        - sh
        - -ec
        # The statically linked Go program binary is invoked to avoid any
        # dependency on utilities like sh that can be missing on certain
        # distros installed on the underlying host. Copy the binary to the
        # same directory where we install cilium cni plugin so that exec permissions
        # are available.
        - |
          cp /usr/bin/cilium-sysctlfix /hostbin/cilium-sysctlfix;
          nsenter --mount=/hostproc/1/ns/mnt "${BIN_PATH}/cilium-sysctlfix";
          rm /hostbin/cilium-sysctlfix
        volumeMounts:
        - name: hostproc
          mountPath: /hostproc
        - name: cni-path
          mountPath: /hostbin
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - SYS_ADMIN
              - SYS_CHROOT
              - SYS_PTRACE
            drop:
              - ALL
      # Mount the bpf fs if it is not mounted. We will perform this task
      # from a privileged container because the mount propagation bidirectional
      # only works from privileged containers.
      - name: mount-bpf-fs
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        args:
        - 'mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf'
        command:
        - /bin/bash
        - -c
        - --
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          privileged: true
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
      - name: clean-cilium-state
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-state
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              name: cilium-config
              key: clean-cilium-bpf-state
              optional: true
        terminationMessagePolicy: FallbackToLogsOnError
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            add:
              - NET_ADMIN
              - SYS_MODULE
              - SYS_ADMIN
              - SYS_RESOURCE
            drop:
              - ALL
        volumeMounts:
        - name: bpf-maps
          mountPath: /sys/fs/bpf
          # Required to mount cgroup filesystem from the host to cilium agent pod
        - name: cilium-cgroup
          mountPath: /run/cilium/cgroupv2
          mountPropagation: HostToContainer
        - name: cilium-run
          mountPath: /var/run/cilium
        resources:
          requests:
            cpu: 100m
            memory: 100Mi # wait-for-kube-proxy
      # Install the CNI binaries in an InitContainer so we don't have a writable host mount in the agent
      - name: install-cni-binaries
        image: "quay.io/cilium/cilium:v1.14.4@sha256:4981767b787c69126e190e33aee93d5a076639083c21f0e7c29596a519c64a2e"
        imagePullPolicy: IfNotPresent
        command:
          - "/install-plugin.sh"
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          seLinuxOptions:
            level: s0
            type: spc_t
          capabilities:
            drop:
              - ALL
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
          - name: cni-path
            mountPath: /host/opt/cni/bin # .Values.cni.install
      restartPolicy: Always
      priorityClassName: system-node-critical
      serviceAccount: "cilium"
      serviceAccountName: "cilium"
      automountServiceAccountToken: true
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # For sharing configuration between the "config" initContainer and the agent
      - name: tmp
        emptyDir: {}
        # To keep state between restarts / upgrades
      - name: cilium-run
        hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        # To keep state between restarts / upgrades for bpf maps
      - name: bpf-maps
        hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
      # To mount cgroup2 filesystem on the host
      - name: hostproc
        hostPath:
          path: /proc
          type: Directory
      # To keep state between restarts / upgrades for cgroup2 filesystem
      - name: cilium-cgroup
        hostPath:
          path: /run/cilium/cgroupv2
          type: DirectoryOrCreate
      # To install cilium cni plugin in the host
      - name: cni-path
        hostPath:
          path:  /opt/cni/bin
          type: DirectoryOrCreate
        # To install cilium cni configuration in the host
      - name: etc-cni-netd
        hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        # To be able to load kernel modules
      - name: lib-modules
        hostPath:
          path: /lib/modules
        # To access iptables concurrently with other processes (e.g. kube-proxy)
      - name: xtables-lock
        hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        # To read the clustermesh configuration
      - name: clustermesh-secrets
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
              # note: items are not explicitly listed here, since the entries of this secret
              # depend on the peers configured, and that would cause a restart of all agents
              # at every addition/removal. Leaving the field empty makes each secret entry
              # to be automatically projected into the volume as a file whose name is the key.
          - secret:
              name: clustermesh-apiserver-remote-cert
              optional: true
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
      - name: host-proc-sys-net
        hostPath:
          path: /proc/sys/net
          type: Directory
      - name: host-proc-sys-kernel
        hostPath:
          path: /proc/sys/kernel
          type: Directory
      - name: hubble-tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-server-certs
              optional: true
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
---
# Source: cilium/templates/cilium-operator/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cilium-operator
  namespace: kube-system
  labels:
    io.cilium/app: operator
    name: cilium-operator
    app.kubernetes.io/part-of: cilium
    app.kubernetes.io/name: cilium-operator
spec:
  # See docs on ServerCapabilities.LeasesResourceLock in file pkg/k8s/version/version.go
  # for more details.
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  # ensure operator update on single node k8s clusters, by using rolling update with maxUnavailable=100% in case
  # of one replica and no user configured Recreate strategy.
  # otherwise an update might get stuck due to the default maxUnavailable=50% in combination with the
  # podAntiAffinity which prevents deployments of multiple operator replicas on the same node.
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        io.cilium/app: operator
        name: cilium-operator
        app.kubernetes.io/part-of: cilium
        app.kubernetes.io/name: cilium-operator
    spec:
      containers:
      - name: cilium-operator
        image: "quay.io/cilium/operator-generic:v1.14.4@sha256:f0f05e4ba3bb1fe0e4b91144fa4fea637701aba02e6c00b23bd03b4a7e1dfd55"
        imagePullPolicy: IfNotPresent
        command:
        - cilium-operator-generic
        args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        livenessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        readinessProbe:
          httpGet:
            host: "127.0.0.1"
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 5
        volumeMounts:
        - name: cilium-config-path
          mountPath: /tmp/cilium/config-map
          readOnly: true
        terminationMessagePolicy: FallbackToLogsOnError
      hostNetwork: true
      restartPolicy: Always
      priorityClassName: system-cluster-critical
      serviceAccount: "cilium-operator"
      serviceAccountName: "cilium-operator"
      automountServiceAccountToken: true
      # In HA mode, cilium-operator pods must not be scheduled on the same
      # node as they will clash with each other.
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      tolerations:
        - operator: Exists
      volumes:
        # To read the configuration from the config map
      - name: cilium-config-path
        configMap:
          name: cilium-config
---
# Source: cilium/templates/hubble-relay/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hubble-relay
  namespace: kube-system
  labels:
    k8s-app: hubble-relay
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-relay
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
    spec:
      securityContext:
        fsGroup: 65532
      containers:
        - name: hubble-relay
          securityContext:
            capabilities:
              drop:
              - ALL
            runAsGroup: 65532
            runAsNonRoot: true
            runAsUser: 65532
          image: "quay.io/cilium/hubble-relay:v1.14.4@sha256:ca81622fd9f04c1316bf4144bde5dbce613758810f6022f6c706b14c9c0815db"
          imagePullPolicy: IfNotPresent
          command:
            - hubble-relay
          args:
            - serve
          ports:
            - name: grpc
              containerPort: 4245
          readinessProbe:
            tcpSocket:
              port: grpc
          livenessProbe:
            tcpSocket:
              port: grpc
          volumeMounts:
          - name: config
            mountPath: /etc/hubble-relay
            readOnly: true
          - name: tls
            mountPath: /var/lib/hubble-relay/tls
            readOnly: true
          terminationMessagePolicy: FallbackToLogsOnError
      restartPolicy: Always
      priorityClassName: 
      serviceAccount: "hubble-relay"
      serviceAccountName: "hubble-relay"
      automountServiceAccountToken: false
      terminationGracePeriodSeconds: 1
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - name: config
        configMap:
          name: hubble-relay-config
          items:
          - key: config.yaml
            path: config.yaml
      - name: tls
        projected:
          # note: the leading zero means this number is in octal representation: do not remove it
          defaultMode: 0400
          sources:
          - secret:
              name: hubble-relay-client-certs
              items:
                - key: tls.crt
                  path: client.crt
                - key: tls.key
                  path: client.key
                - key: ca.crt
                  path: hubble-server-ca.crt
---
# Source: cilium/templates/hubble-ui/deployment.yaml
kind: Deployment
apiVersion: apps/v1
metadata:
  name: hubble-ui
  namespace: kube-system
  labels:
    k8s-app: hubble-ui
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        k8s-app: hubble-ui
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
    spec:
      priorityClassName: 
      serviceAccount: "hubble-ui"
      serviceAccountName: "hubble-ui"
      automountServiceAccountToken: true
      containers:
      - name: frontend
        image: "quay.io/cilium/hubble-ui:v0.12.1@sha256:9e5f81ee747866480ea1ac4630eb6975ff9227f9782b7c93919c081c33f38267"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8081
        volumeMounts:
        - name: hubble-ui-nginx-conf
          mountPath: /etc/nginx/conf.d/default.conf
          subPath: nginx.conf
        - name: tmp-dir
          mountPath: /tmp
        terminationMessagePolicy: FallbackToLogsOnError
      - name: backend
        image: "quay.io/cilium/hubble-ui-backend:v0.12.1@sha256:1f86f3400827a0451e6332262467f894eeb7caf0eb8779bd951e2caa9d027cbe"
        imagePullPolicy: IfNotPresent
        env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: "hubble-relay:80"
        ports:
        - name: grpc
          containerPort: 8090
        volumeMounts:
        terminationMessagePolicy: FallbackToLogsOnError
      nodeSelector:
        kubernetes.io/os: linux
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
# Source: cilium/templates/cilium-secrets-namespace.yaml
# Only create the namespace if it's different from Ingress secret namespace or Ingress is not enabled.

# Only create the namespace if it's different from Ingress and Gateway API secret namespaces (if enabled).
